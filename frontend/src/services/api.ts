// Importa a biblioteca Axios, que ser√° usada para fazer requisi√ß√µes HTTP
import axios from "axios";

// Cria uma inst√¢ncia do Axios com uma URL base definida em vari√°vel de ambiente (.env)
// Ex: VITE_API_URL=http://localhost/api
const api = axios.create({
  baseURL: process.env.REACT_APP_API_URL
});

// Intercepta todas as requisi√ß√µes feitas com essa inst√¢ncia de Axios
// Serve para adicionar o token JWT automaticamente no cabe√ßalho Authorization
api.interceptors.request.use((config) => {
  // Busca o token salvo no localStorage ap√≥s login
  const token = localStorage.getItem("token");
  console.log("üîê api.ts Usando token:", token);

  // Se houver token, injeta o cabe√ßalho Authorization
  if (token) {
    // Garante que o objeto headers exista antes de us√°-lo
    config.headers = config.headers ?? {};
    
    // Define o cabe√ßalho Authorization com esquema Bearer (padr√£o JWT)
    config.headers.Authorization = `Bearer ${token}`;
  }

  // Retorna a configura√ß√£o atualizada, que ser√° usada na requisi√ß√£o
  return config;
});

export default api;

